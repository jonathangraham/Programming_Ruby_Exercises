require_relative 'Board'
require_relative 'Competitor'

def main
	game_setup
	players = [@player1, @player2].cycle
	players.next if player1_starts? == false
	loop do
		current_player = players.next
	  	play_turn(current_player)
		main if game_end?(@board, current_player)
	end
end

def game_setup
	play_game?
	initialize_game
	get_number_players
end

def initialize_game
	@board = Board.new([' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '])
end

def play_game?
	puts 'Would you like to play Tic Tac Toe? Type Y to play.'
	if gets.chomp.upcase == 'Y' 
		true
	else 
		puts 'Goodbye!'
		exit
	end
end

def get_number_players
	puts 'How many players? Choose 1 or 2'
	if gets.to_i == 1
		@player1 = Human.new('X')
		@player2 = Computer.new('O')
	else
		@player1 = Human.new('X')
		@player2 = Human.new('O')
	end
end

def player1_starts?
	puts "#{@player1.name} is #{@player1.letter}, #{@player2.name} is #{@player2.letter}"
	puts "Flipping coin to see who starts..."
	sleep 1
	if rand(2) == 0 
		puts "#{@player1.name} (#{@player1.letter}) to start"
		true
	else
		puts "#{@player2.name} (#{@player2.letter}) to start"
		false
	end
end

def play_turn(player)
	@board.print_board
	puts "#{player.name} (#{player.letter}) to go next"
	player.move(@board)
end

def game_end?(board, player)
	if 	board.win?(board.data, player.letter)
	  	board.print_board
	  	puts "#{player.name} (#{player.letter}) wins!"
	  	true
	elsif board.draw?(board.data)
	  	board.print_board
	  	puts "draw"
	  	true
  	end
end

main
