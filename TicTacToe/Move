class Move
	attr_accessor :move
	def initialize()
		@move = move
	end	

	def human_move(board, player)
		puts 'Enter position to play'
		@move = gets.to_i
		if board.valid_move?(@move)
			board.update(@move, player)
		else
			puts "Invalid move. Please enter a number where there is a space."
	  	 	human_move(board, player)
		end
	end

	def computer_move(board, player, depth)
		if board.available_spaces.count == 9
			@move = [1,3,5,7,9].sample #random corner or centre to start
		else
			negamax(board, player, depth)
		end
		puts "computer plays in space: #{@move}"
     	board.update(@move, player)
	end
	
	def negamax(board, player, depth)
		opponent = opponent(player)
    	if board.game_over?(player)
      		return score(board, player, opponent)
    	else
      		best_rank = -999
      		board.available_spaces.each do |space|
        	board.update(space + 1, player)
        	rank = -negamax(board, opponent, depth + 1 )
       		board.un_update(space + 1)
       			if rank > best_rank
         			best_rank = rank
         			@move = space + 1 if depth == 1
				end
     		end
     		return best_rank
		end
	end

 	def opponent(marker)
      	marker == "X" ? "O" : "X"
    end

    def score(board, player, opponent)
		if board.win?(player) 
			return 1
		elsif board.win?(opponent)
		    return -1
		else
		    return 0
		end
	end
end
